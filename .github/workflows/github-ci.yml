# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions
env:
  EB_APPLICATION_NAME: "reactapp"
  EB_APP_ENV_NAME: "reactapp-prod"
  DEPLOY_PACKAGE_NAME: "reactapp-${{ github.sha }}.zip"
  AWS_REGION_NAME: "us-east-1"
name: Continues Integration

on:
  push:
    branches: [ "master" ]
jobs:
  build:

    runs-on: self-hosted

    strategy:
      matrix:
        node-version: [14.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    - run: npm run build --if-present
    - run: npm test
    
    - name : compress build to zip file
      run: |
        cd build
        pwd
        zip -r ~/reactapp-build/{{env.DEPLOY_PACKAGE_NAME}} ./
        
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION_NAME }}

    - name: Copy ZIP file to S3 bucket
      run: |
          cd ~/reactapp-build
          pwd
          echo build name ${{ env.DEPLOY_PACKAGE_NAME }}
          aws s3 cp ${{ env.DEPLOY_PACKAGE_NAME }} s3://${{ secrets.AWS_BUCKET }}
    - name: Completion of CI Pipleline
      run: echo "CI Pipleline part finished successfully"
      
  deploy:
    runs-on: self-hosted
    needs: [build]
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION_NAME }}

      - name: Create new ElasticBeanStalk Version
        run: |
          aws elasticbeanstalk create-application-version \
          --application-name reactapp \
          --source-bundle S3Bucket="${{ secrets.AWS_BUCKET }}",S3Key="${{ env.DEPLOY_PACKAGE_NAME }}" \
          --version-label "Ver-${{ github.sha }}" \
          --description "CommitSHA-${{ github.sha }}"
      - name: Deploy new version to EBS
        run: aws elasticbeanstalk update-environment --environment-name ${{ env.EB_APP_ENV_NAME }} --version-label "Ver-${{ github.sha }}"

      - name: Completion of CD Pipleline
        run: echo "CD Pipleline part finished successfully"

  
